{"componentChunkName":"component---src-pages-post-js","path":"/post/","webpackCompilationHash":"1db9140833a950896f2b","result":{"data":{"sanityBlog":{"title":"Portfolio + Blog con React, Gatsby y Sanity. (Parte 1)","mainImage":{"alt":"Gatsby + Sanity (Primera Parte)","caption":null,"asset":{"fluid":{"src":"https://cdn.sanity.io/images/vjjgv3em/development/89be50ccf93f7338550e418177f6ccdcb661a8dc-2000x840.jpg?w=1000&h=420&fit=crop","srcSet":"https://cdn.sanity.io/images/vjjgv3em/development/89be50ccf93f7338550e418177f6ccdcb661a8dc-2000x840.jpg?w=250&h=105&fit=crop 250w,\nhttps://cdn.sanity.io/images/vjjgv3em/development/89be50ccf93f7338550e418177f6ccdcb661a8dc-2000x840.jpg?w=500&h=210&fit=crop 500w,\nhttps://cdn.sanity.io/images/vjjgv3em/development/89be50ccf93f7338550e418177f6ccdcb661a8dc-2000x840.jpg?w=1000&h=420&fit=crop 1000w,\nhttps://cdn.sanity.io/images/vjjgv3em/development/89be50ccf93f7338550e418177f6ccdcb661a8dc-2000x840.jpg?w=1500&h=630&fit=crop 1500w"}}},"categories":[{"category":["Desarrollo"]}],"_rawBody":[{"_key":"c94d60b9188f","_type":"block","children":[{"_key":"c94d60b9188f0","_type":"span","marks":[],"text":"Mi nombre es Sebastián Tamashiro. Soy desarrollador front-end, diseñador de interacciones y actualmente trabajo en "},{"_key":"c94d60b9188f1","_type":"span","marks":["fa302e313aa9"],"text":"Avantrip"},{"_key":"c94d60b9188f2","_type":"span","marks":[],"text":"."}],"markDefs":[{"_key":"fa302e313aa9","_type":"link","href":"https://www.avantrip.com/","linkBlank":["_blank"],"linkRel":["nofollow"],"title":"Avantrip"}],"style":"normal"},{"_key":"ebb69160ff54","_type":"block","children":[{"_key":"ebb69160ff540","_type":"span","marks":[],"text":"Hasta marzo del 2019 mi portfolio estaba hecho en HTML, CSS, un poco de JavaScript y PHP. Pero al momento de entrar a trabajar aprendí React.js y me focalicé en aprender más a fondo JavaScript."}],"markDefs":[],"style":"normal"},{"_key":"91c40708df71","_type":"block","children":[{"_key":"91c40708df710","_type":"span","marks":[],"text":"Hoy, después de varios meses publico la nueva versión de mi portfolio basado en "},{"_key":"91c40708df711","_type":"span","marks":["strong","fbcedde405d8"],"text":"React.js"},{"_key":"91c40708df712","_type":"span","marks":[],"text":", utilizando "},{"_key":"91c40708df713","_type":"span","marks":["strong","e5b93345d13b"],"text":"Gatsby.js"},{"_key":"91c40708df714","_type":"span","marks":[],"text":" y "},{"_key":"91c40708df715","_type":"span","marks":["strong","69c234c02036"],"text":"Sanity.io"},{"_key":"91c40708df716","_type":"span","marks":[],"text":" como headlesss CMS."}],"markDefs":[{"_key":"fbcedde405d8","_type":"link","href":"https://reactjs.org/","linkBlank":["_blank"]},{"_key":"e5b93345d13b","_type":"link","href":"https://www.gatsbyjs.org/","linkBlank":["_blank"]},{"_key":"69c234c02036","_type":"link","href":"http://sanity.io","linkBlank":["_blank"]}],"style":"normal"},{"_key":"0c3761cb92b2","_type":"block","children":[{"_key":"0c3761cb92b20","_type":"span","marks":[],"text":"En este post mi intención es transmitir todos los "},{"_key":"0c3761cb92b21","_type":"span","marks":["strong"],"text":"conocimientos básicos"},{"_key":"0c3761cb92b22","_type":"span","marks":[],"text":" que debes tener para poder lanzarte a desarrollar tu propio portfolio, blog, o lo que quieras utilizando estas herramientas."}],"markDefs":[],"style":"normal"},{"_key":"a15f2a549606","_type":"block","children":[{"_key":"a15f2a5496060","_type":"span","marks":[],"text":"Hay algunas cosas que no voy a explicar porque sino el post se volvería eterno. Para poder seguir este tutorial debes:"}],"markDefs":[],"style":"normal"},{"_key":"f3476b284309","_type":"block","children":[{"_key":"f3476b2843090","_type":"span","marks":[],"text":"Tener conocimientos en React.js"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"968e48f8d516","_type":"block","children":[{"_key":"968e48f8d5160","_type":"span","marks":[],"text":"Tener conocimientos en JavaScript ES6"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"bbab7408569b","_type":"block","children":[{"_key":"bbab7408569b0","_type":"span","marks":[],"text":"Este artículo está dividido en 2 partes. En esta primera parte voy a hablar sobre Gatsby, y en la segunda parte de Sanity, el cual te dejo el link a continuación por si querés saltearte esta parte. "},{"_key":"bbab7408569b1","_type":"span","marks":["4aff1df01717"],"text":"[Segunda Parte]"},{"_key":"bbab7408569b2","_type":"span","marks":[],"text":""}],"markDefs":[{"_key":"4aff1df01717","_type":"link","href":"https://alotama.com/blog/portfolio-blog-con-react-gatsby-y-sanity-2-parte"}],"style":"normal"},{"_key":"3343fdecbf6b","_type":"block","children":[{"_key":"3343fdecbf6b0","_type":"span","marks":[],"text":"Cualquier duda que tengas, podés enviarme un mensaje por "},{"_key":"3343fdecbf6b1","_type":"span","marks":["a6c631594890"],"text":"Twitter"},{"_key":"3343fdecbf6b2","_type":"span","marks":[],"text":". ¡Me encantaría recibir tu feedback para poder mejorar en el futuro!"}],"markDefs":[{"_key":"a6c631594890","_type":"link","href":"https://twitter.com/alotama","linkBlank":["_blank"],"linkRel":["nofollow"]}],"style":"normal"},{"_key":"e2fdd371416a","_type":"block","children":[{"_key":"e2fdd371416a0","_type":"span","marks":[],"text":"¿Qué es Gatsby?"}],"markDefs":[],"style":"h2"},{"_key":"f1b0afa2f0e8","_type":"block","children":[{"_key":"f1b0afa2f0e80","_type":"span","marks":[],"text":"Gatsby es un framework basado en React para crear sitios web y aplicaciones de forma estática de una manera fácil y rápida. Sigue la estructura "},{"_key":"f1b0afa2f0e81","_type":"span","marks":["32465dd048c0"],"text":"JAMStack"},{"_key":"f1b0afa2f0e82","_type":"span","marks":[],"text":", la cuál en resumidas palabras utiliza "},{"_key":"f1b0afa2f0e83","_type":"span","marks":["strong"],"text":"J"},{"_key":"f1b0afa2f0e84","_type":"span","marks":[],"text":"avaScript,"},{"_key":"f1b0afa2f0e85","_type":"span","marks":["strong"],"text":" A"},{"_key":"f1b0afa2f0e86","_type":"span","marks":[],"text":"PIy"},{"_key":"f1b0afa2f0e87","_type":"span","marks":["strong"],"text":" M"},{"_key":"f1b0afa2f0e88","_type":"span","marks":[],"text":"arkup para crear webs modernas. Algo muy interesante que tiene este framework es la incorporación de GraphQL para hidratar los componentes que tengamos."}],"markDefs":[{"_key":"32465dd048c0","_type":"link","href":"https://jamstack.org/","linkBlank":["_blank"]}],"style":"normal"},{"_key":"74b7022799fb","_type":"block","children":[{"_key":"74b7022799fb0","_type":"span","marks":[],"text":"Para iniciar un nuevo proyecto con Gatsby hay que instalar primero el CLI ejecutando el comando en la terminal:"}],"markDefs":[],"style":"normal"},{"_key":"28c052cbc6cb","_type":"code","code":"npm install -g gatsby-cli","language":"sh"},{"_key":"896da9c10e5b","_type":"block","children":[{"_key":"896da9c10e5b0","_type":"span","marks":[],"text":"Una vez hecho esto, creamos un sitio nuevo utilizando el boilerplate que nos ofrece Gatsby."}],"markDefs":[],"style":"normal"},{"_key":"72275d952539","_type":"code","code":"gatsby new nuevo-sitio-con-gatsby\ncd nuevo-sitio-con-gatsby\nnpm install\ngatsby develop","language":"sh"},{"_key":"e0d45b13ed1d","_type":"block","children":[{"_key":"e0d45b13ed1d0","_type":"span","marks":[],"text":"Al terminar, se nos va a abrir una ventana en el navegador en localhost:8000. Felicidades! Ya levantaste tu primera página hecha con Gatsby"}],"markDefs":[],"style":"normal"},{"_key":"317184b17f17","_type":"figure","alt":"Tu primer sitio con Gatsby","asset":{"_ref":"image-cc7923ab42262fa5e908d18f5d43249097a15721-1920x937-png","_type":"reference"}},{"_key":"eae5719fd0e7","_type":"block","children":[{"_key":"eae5719fd0e70","_type":"span","marks":[],"text":"Cosas a tener en cuenta"}],"markDefs":[],"style":"h2"},{"_key":"66dc5c000099","_type":"block","children":[{"_key":"66dc5c0000990","_type":"span","marks":[],"text":"Cuando trabajamos con Gatsby ya hay varias cosas que pasan automágicamente. A continuación voy a mencionar algunas de esas cosas que fui descubriendo cuando estaba desarrollando mi sitio."}],"markDefs":[],"style":"normal"},{"_key":"ea9ed0328585","_type":"block","children":[{"_key":"ea9ed03285850","_type":"span","marks":[],"text":"Routing de paginas"}],"markDefs":[],"style":"h2"},{"_key":"4f1c8f110d25","_type":"block","children":[{"_key":"4f1c8f110d250","_type":"span","marks":[],"text":"Si queremos generar páginas estáticas lo que debemos hacer es crear es un archivo con el nombre que queremos que tenga la URL. Es decir que, si queremos tener por ejemplo /about, nuestro archivo debe llamarse "},{"_key":"4f1c8f110d251","_type":"span","marks":["code"],"text":"about.js"},{"_key":"4f1c8f110d252","_type":"span","marks":[],"text":"."}],"markDefs":[],"style":"normal"},{"_key":"ec180cee2dd0","_type":"block","children":[{"_key":"ec180cee2dd00","_type":"span","marks":[],"text":"Solamente puede hacer un index.js por carpeta. Es decir que si queremos podemos tener la siguientes estructuras."}],"markDefs":[],"style":"normal"},{"_key":"4164e05ded90","_type":"code","code":"|-- /pages\n\t|-- contact.js\n\t|-- about.js\n\t|-- blog.js\n\t|-- index.js","language":"markdown"},{"_key":"a83d467f3ed6","_type":"code","code":"|-- /pages\n\t|-- /contact\n\t\t|-- index.js\n\t|-- /about\n\t\t|-- index.js\n\t|-- /blog\n\t\t|-- index.js\n\t|-- index.js","language":"markdown"},{"_key":"1d2aa7c3c6d2","_type":"block","children":[{"_key":"1d2aa7c3c6d20","_type":"span","marks":[],"text":"GraphQL"}],"markDefs":[],"style":"h2"},{"_key":"b2df34c7e5b7","_type":"block","children":[{"_key":"b2df34c7e5b70","_type":"span","marks":[],"text":"Si tenemos que hacer una query, lo ideal es hacerla con GraphQL. Gatsby esta muy integrado con esta herramienta y casi todos los plugins que vamos a encontrar que le pegan a una API unifican los datos de esta fuente con GraphQL."}],"markDefs":[],"style":"normal"},{"_key":"e9df684ddc57","_type":"block","children":[{"_key":"e9df684ddc570","_type":"span","marks":[],"text":"Query variables"}],"markDefs":[],"style":"h2"},{"_key":"8156d22f51a4","_type":"block","children":[{"_key":"8156d22f51a40","_type":"span","marks":[],"text":"Generalmente cuando trabajamos con "},{"_key":"8156d22f51a41","_type":"span","marks":["strong"],"text":"GraphQL"},{"_key":"8156d22f51a42","_type":"span","marks":[],"text":" utilizamos "},{"_key":"8156d22f51a43","_type":"span","marks":["strong","543fd0faa365"],"text":"ApolloProvider"},{"_key":"8156d22f51a44","_type":"span","marks":[],"text":" como un "},{"_key":"8156d22f51a45","_type":"span","marks":["strong"],"text":"HOC"},{"_key":"8156d22f51a46","_type":"span","marks":[],"text":"(High Order Components), el cual esta por arriba de toda nuestra web/aplicación. Pero cuando estamos usando Gatsby no es necesario, ya esta implícito de nuestro código y no nos tenemos que preocupar por colocarlo."}],"markDefs":[{"_key":"543fd0faa365","_type":"link","href":"https://github.com/apollographql/react-apollo","linkBlank":["_blank"]}],"style":"normal"},{"_key":"104da077da2c","_type":"block","children":[{"_key":"104da077da2c0","_type":"span","marks":[],"text":"Pongamos un ejemplo, tenemos un post el cuál tiene que recibir un título, el thumbnail, la categoría y el cuerpo del artículo. Debería quedar algo así usando "},{"_key":"104da077da2c1","_type":"span","marks":["207d176ff01b"],"text":"React Hooks"},{"_key":"104da077da2c2","_type":"span","marks":[],"text":":"}],"markDefs":[{"_key":"207d176ff01b","_type":"link","href":"https://es.reactjs.org/docs/hooks-intro.html","linkBlank":["_blank"]}],"style":"normal"},{"_key":"6ae7cdc1650e","_type":"code","code":"import React from 'react';\n\nconst Post = ({ title, category, thumbnail, body }) => {\n\treturn(\n\t\t<h1>{title}</h1>\n\t\t<small>{category}</small>\n\t\t<figure>\n\t\t\t<img src={thumbnail} />\n\t\t</figure>\n\t\t<main>{body}</main>\n\t)\n}\n\nexport default Post;","language":"jsx"},{"_key":"3af993e9e6f6","_type":"block","children":[{"_key":"3af993e9e6f60","_type":"span","marks":[],"text":"Con ApolloProvider"}],"markDefs":[],"style":"h3"},{"_key":"55f72cbc6413","_type":"block","children":[{"_key":"55f72cbc64130","_type":"span","marks":[],"text":"Si queremos que reciba dinámicamente estas propiedades según el ID del post. Lo que deberíamos hacer con ApolloProvider es algo así:"}],"markDefs":[],"style":"normal"},{"_key":"1c8e9453026e","_type":"code","code":"import React from 'react';\nimport { Query } from \"react-apollo\";\n\nconst GET_POST = gql`\n\t{\n\t\tquery Post($id: String) {\n\t\t\tblog(id: {eq: $id}) {\n\t\t\t\ttitle\n\t\t\t\tcategory\n\t\t\t\tthumbnail\n\t\t\t\tbody\n\t\t\t}\n\t\t}\t\n\t}\n`;\n\nconst Content = ({ id }) => (\n\t<Query query={GET_POST} variables={{ id }}>\n\t\t{({ loading, error, data }) => {\n      if (loading) return null;\n      if (error) return `Error! ${error}`;\n\n      return (\n        <div>\n\t\t\t\t\t<h1>{data.blog.title}</h1>\n\t\t\t\t\t<small>{data.blog.category}</small>\n\t\t\t\t\t<figure>\n\t\t\t\t\t\t<img src={data.blog.thumbnail} />\n\t\t\t\t\t</figure>\n\t\t\t\t\t<main>{data.blog.body}</main>\n\t\t\t\t</div>\n      );\n    }}\n\t</Query>\n)\n\nconst Post = () => {\n\treturn(\n\t\t<Content />\n\t)\n}\n\nexport default Post;\n","language":"jsx"},{"_key":"85cd0ed1e764","_type":"block","children":[{"_key":"85cd0ed1e7640","_type":"span","marks":[],"text":"Con Gatsby"}],"markDefs":[],"style":"h3"},{"_key":"08f8e4037e88","_type":"block","children":[{"_key":"08f8e4037e880","_type":"span","marks":[],"text":"Pero con Gatsby nos evitamos crear la constante "},{"_key":"08f8e4037e881","_type":"span","marks":["code"],"text":"Content"},{"_key":"08f8e4037e882","_type":"span","marks":[],"text":" que va a escuchar la query "},{"_key":"08f8e4037e883","_type":"span","marks":["code"],"text":"GET_POST"},{"_key":"08f8e4037e884","_type":"span","marks":[],"text":" y dentro de esta, la variable "},{"_key":"08f8e4037e885","_type":"span","marks":["code"],"text":"id"},{"_key":"08f8e4037e886","_type":"span","marks":[],"text":"."}],"markDefs":[],"style":"normal"},{"_key":"19bf19c367fe","_type":"block","children":[{"_key":"19bf19c367fe0","_type":"span","marks":[],"text":"Lo que tenemos que hacer para lograrlo es primero crear una página que va a funcionar como template para nuestra información extraída de GraphQL. Por ejemplo, en mi caso tuve que hacer esto:"}],"markDefs":[],"style":"normal"},{"_key":"13b654d23d6d","_type":"code","code":"// gatsby-node.js\nexports.createPages = async ({ graphql, actions }) => {\n  const { createPage } = actions\n\n  const result = await graphql(`\n    query allPostQuery {\n      allSanityBlog {\n        edges {\n          node {\n            slug {\n              current\n            }\n            id\n          }\n        }\n      }\n    }\n  `)\n\n  if (result.errors) {\n    throw result.errors\n  }\n\n  const posts = result.data.allSanityBlog.edges || []\n  posts.forEach(edge => {\n    const id = edge.node.id\n    const path = `/blog/${edge.node.slug.current}`\n\n    createPage({\n      path,\n      component: require.resolve(\"./src/pages/post.js\"),\n      context: { id },\n    })\n  })\n}","language":"javascript"},{"_key":"76ac9c537124","_type":"block","children":[{"_key":"76ac9c5371240","_type":"span","marks":[],"text":"\nExpliquemos esto por partes:"}],"markDefs":[],"style":"normal"},{"_key":"e9136476da1f","_type":"block","children":[{"_key":"e9136476da1f0","_type":"span","marks":["code"],"text":"createPage"},{"_key":"e9136476da1f1","_type":"span","marks":[],"text":" es la API que nos provee Gatsby para decirle que queremos crear una página de forma dinámica. Hay muchas más, que si te interesa podes ver en la "},{"_key":"e9136476da1f2","_type":"span","marks":["006fda7376de"],"text":"documentación"},{"_key":"e9136476da1f3","_type":"span","marks":[],"text":"."}],"markDefs":[{"_key":"006fda7376de","_type":"link","href":"https://www.gatsbyjs.org/docs/node-apis/","linkBlank":["_blank"]}],"style":"normal"},{"_key":"6522c6dfbfc0","_type":"block","children":[{"_key":"6522c6dfbfc00","_type":"span","marks":["strong"],"text":"IMPORTANTE:"},{"_key":"6522c6dfbfc01","_type":"span","marks":[],"text":" Los procesos que corren dentro de gatsby-node.js ocurren únicamente al momento de hacer el build de la página, por lo que si hacemos un cambio en la estructura del template debemos tirar el sitio abajo y volverlo a levantar."}],"markDefs":[],"style":"normal"},{"_key":"245bce348b6e","_type":"code","code":"const result = await graphql(`\n    query allPostQuery {\n      allSanityBlog {\n        edges {\n          node {\n            slug {\n              current\n            }\n            id\n          }\n        }\n      }\n    }\n  `)","language":"javascript"},{"_key":"5d28985550bf","_type":"block","children":[{"_key":"5d28985550bf0","_type":"span","marks":[],"text":"El código de arriba es la query que hice para pedirle a Gatsby que me busque dentro de todos los posts que escribí y extraiga el slug y el ID del mismo."}],"markDefs":[],"style":"normal"},{"_key":"4ba059230555","_type":"code","code":"const posts = result.data.allSanityBlog.edges || []\nposts.forEach(edge => {\n    const id = edge.node.id,\n\t\t\t    path = `/blog/${edge.node.slug.current}`\n\n    createPage({\n      path,\n      component: require.resolve(\"./src/pages/post.js\"),\n      context: { id },\n    })\n  })","language":"javascript"},{"_key":"4aebd0d37db7","_type":"block","children":[{"_key":"4aebd0d37db70","_type":"span","marks":[],"text":"Ahora, por cada uno de los resultados de esa query, le pido que separe el id, y el slug; y que los guarde en las constantes "},{"_key":"4aebd0d37db71","_type":"span","marks":["code"],"text":"id"},{"_key":"4aebd0d37db72","_type":"span","marks":[],"text":" y "},{"_key":"4aebd0d37db73","_type":"span","marks":["code"],"text":"path"},{"_key":"4aebd0d37db74","_type":"span","marks":[],"text":". Después, que cree una página con la ruta que definimos en la variable "},{"_key":"4aebd0d37db75","_type":"span","marks":["code"],"text":"path"},{"_key":"4aebd0d37db76","_type":"span","marks":[],"text":", utilizando el template que esta en esta ruta "},{"_key":"4aebd0d37db77","_type":"span","marks":["code"],"text":"./src/pages/post.js"},{"_key":"4aebd0d37db78","_type":"span","marks":[],"text":" y que deje el "},{"_key":"4aebd0d37db79","_type":"span","marks":["code"],"text":"id"},{"_key":"4aebd0d37db710","_type":"span","marks":[],"text":" como contexto."}],"markDefs":[],"style":"normal"},{"_key":"0ae3e53ecd5c","_type":"block","children":[{"_key":"0ae3e53ecd5c0","_type":"span","marks":[],"text":"Si todo salió bien, dentro del archivo "},{"_key":"0ae3e53ecd5c1","_type":"span","marks":["code"],"text":"post.js"},{"_key":"0ae3e53ecd5c2","_type":"span","marks":[],"text":" deberías haber, haciendo "},{"_key":"0ae3e53ecd5c3","_type":"span","marks":["code"],"text":"console.log"},{"_key":"0ae3e53ecd5c4","_type":"span","marks":[],"text":", una prop llamada 'pageContext' y dentro una prop llamada "},{"_key":"0ae3e53ecd5c5","_type":"span","marks":["code"],"text":"id"},{"_key":"0ae3e53ecd5c6","_type":"span","marks":[],"text":"."}],"markDefs":[],"style":"normal"},{"_key":"66d28eb28b57","_type":"figure","alt":"pageContext: id \"87d4ddda7-1b9c-5451-9ed8-81ff702b096b\"","asset":{"_ref":"image-7c0f78d8a9b80a38a3d963ba2cf52d36f248a9dc-1632x248-png","_type":"reference"}},{"_key":"11f83265b7cf","_type":"block","children":[{"_key":"11f83265b7cf0","_type":"span","marks":[],"text":"Una vez hecho esto, ¡Felicidades! Ya pasaste una variable de una query a una página creada dinámicamente. Ahora lo que nos queda es popular nuestro componente con la data de nuestra query, haciendo unas pequeñas modificaciones."}],"markDefs":[],"style":"normal"},{"_key":"a95f6677be5c","_type":"code","code":"import React from 'react';\n\nconst Post = ({ data }) => {\n\treturn(\n\t\t<h1>{data.posts.title}</h1>\n\t\t<small>{data.posts.category}</small>\n\t\t<figure>\n\t\t\t<img src={data.posts.thumbnail} />\n\t\t</figure>\n\t\t<main>{data.posts.body}</main>\n\t)\n}\n\nexport default Post;","language":"jsx"},{"_key":"af93a2ab65d1","_type":"block","children":[{"_key":"af93a2ab65d10","_type":"span","marks":[],"text":"Ya no vamos a esperar todas las propiedades de antes porque todas esas viajan dentro de "},{"_key":"af93a2ab65d11","_type":"span","marks":["code"],"text":"data"},{"_key":"af93a2ab65d12","_type":"span","marks":[],"text":" en forma de array."}],"markDefs":[],"style":"normal"},{"_key":"c0002cd67637","_type":"block","children":[{"_key":"c0002cd676370","_type":"span","marks":[],"text":"Conclusión"}],"markDefs":[],"style":"h2"},{"_key":"aafe2c4d0bce","_type":"block","children":[{"_key":"aafe2c4d0bce0","_type":"span","marks":[],"text":"En el artículo vimos cómo crear nuestro primer sitio con Gatsby, crear páginas estáticas y páginas dinámicas con contenido proveniente de GraphQL. En la segunda parte de este artículo (Al que podes acceder si haces click acá) vamos a ver cómo crear un proyecto en "},{"_key":"aafe2c4d0bce1","_type":"span","marks":["e141b405534a"],"text":"Sanity.io"},{"_key":"aafe2c4d0bce2","_type":"span","marks":[],"text":" y cómo customizarlo a nuestro gusto."}],"markDefs":[{"_key":"e141b405534a","_type":"link","href":"http://sanity.io","linkBlank":["_blank"]}],"style":"normal"},{"_key":"1fe5fb179ef0","_type":"block","children":[{"_key":"1fe5fb179ef00","_type":"span","marks":[],"text":""}],"markDefs":[],"style":"normal"},{"_key":"6a77375b7841","_type":"block","children":[{"_key":"6a77375b78410","_type":"span","marks":["em"],"text":"Para seguir leyendo la segunda parte de este artículo podes "},{"_key":"6a77375b78411","_type":"span","marks":["em","d8b8d9156690"],"text":"hacer click acá"},{"_key":"6a77375b78412","_type":"span","marks":["em"],"text":""}],"markDefs":[{"_key":"d8b8d9156690","_type":"link","href":"https://alotama.com/blog/portfolio-blog-con-react-gatsby-y-sanity-2-parte"}],"style":"normal"}],"publishedAt":"10 de July 2019","slug":{"current":"portfolio-blog-con-react-gatsby-y-sanity-1-parte"},"_updatedAt":"2019-07-19T17:39:33Z","_createdAt":"2019-07-08T13:48:11Z"}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}